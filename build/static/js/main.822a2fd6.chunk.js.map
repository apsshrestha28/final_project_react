{"version":3,"sources":["requests.js","components/SignInPage.js","components/SignUpPageForCustomer.js","components/SignUpPageForDriver.js","components/GoogleAPI.js","components/DriverIndexPage.js","components/WelcomePage.js","components/AuthRoute.js","components/Navbar.js","components/CustomerProfilePage.js","components/RideRequestPage.js","components/StarRating.js","components/ReviewDetails.js","components/ReviewList.js","components/DriverProfilePage.js","components/DriversDetails.js","components/DriverShowPage.js","components/DriverRideRequestPage.js","components/NotFoundPage.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","User","fetch","headers","then","res","json","params","method","body","JSON","stringify","id","Customer","credentials","Review","user_id","RideRequest","Session","SignInPage","handleSubmit","history","className","onSubmit","event","preventDefault","currentTarget","formData","FormData","email","get","password","push","htmlFor","type","name","required","SignUpPageForCustomer","props","fD","newUser","first_name","last_name","password_confirmation","address","destination_address","phone_number","SignUpPageForDriver","driver_license_number","description","Locations","state","destinationLat","latitude","destinationLong","longitude","distance","customers","current","currentCustomer","filter","customer","dis","getDistance","setState","_","round","this","to","Component","DriverIndexPage","users","map","user","WelcomePage","style","fontSize","AuthRoute","isAuth","component","restProps","render","routeProps","Navbar","currentUser","onClick","destroySession","window","location","CustomerProfilePage","ride_requests","a","customer_id","ride_request","previousState","Table","striped","bordered","hover","variant","requiredUser","element","ride_date","ride_time","substring","status","RideRequestPage","color","newRideRequest","match","toast","success","setTimeout","reload","StarRating","max","Array","from","length","el","i","Star","height","restStyle","xmlns","viewBox","fill","d","ReviewDetails","created_at","rating","toLocaleString","ReviewList","reviews","listStyle","review","requiredCustomer","Date","toDateString","DriverProfilePage","DriverDetails","DriverShowPage","bind","value","cols","rows","DriverRideRequestPage","acceptRequest","NotFoundPage","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.822a2fd6.chunk.js","sourcesContent":["const BASE_URL = `https://young-shore-98752.herokuapp.com/api/v1`;\n\nexport const User = {\n  index() {\n    return fetch(`${BASE_URL}/users`,{\n      headers:{\n        'Cache-Control':'no-cache'\n      }})\n      .then(res => res.json());\n  },\n  create(params) {\n    return fetch(`${BASE_URL}/users` , {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(params)\n    })\n    .then(res => \n      res.json()\n    );\n  },\n  show(id){\n    return fetch(`${BASE_URL}/users/${id}`)\n      .then(res => res.json());\n  },\n  update(id,params){\n    return fetch(`${BASE_URL}/users/${id}`,{\n      method: 'PATCH',\n      credentials: 'include',\n      headers: {\n        'Content-Type':'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(res => res.json());\n  }\n \n}\n\nexport const Customer = {\n  index() {\n    return fetch(`${BASE_URL}/customers`,{\n      headers: {\n        'Cache-Control': 'no-cache'\n      }}).then (res => res.json());\n  },\n  create(params) {\n    return fetch(`${BASE_URL}/customers`,{\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(res => res.json());\n  },\n  show(id){\n    return fetch(`${BASE_URL}/customers/${id}`)\n      .then(res => res.json());\n  },\n  update(id, params) {\n    return fetch(`${BASE_URL}/customers/${id}`, {\n      method: 'PATCH',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(res => res.json)\n  }\n}\n\nexport const Review = {\n  show(params) {\n    return fetch(`${BASE_URL}/users/${params.id}/reviews`,{\n      headers:{\n        'Cache-Control':'no-cache'\n      }})\n      .then(res => res.json());\n  },\n  create(params) {\n    return fetch(`${BASE_URL}/users/${params.user_id}/reviews`,{\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(res => res.json());\n  }\n}\n\nexport const RideRequest= {\n  index(){\n    return fetch(`${BASE_URL}/ride_requests`, {\n      headers: {\n        'Cache-Control': 'no-cache'\n      }}).then (res => res.json());  \n  },\n  show(params) {\n    return fetch(`${BASE_URL}/users/${params.id}/ride_requests`,{\n      headers:{\n        'Cache-Control':'no-cache'\n      }})\n      .then(res => res.json());\n  },\n  create(params) {\n    return fetch(`${BASE_URL}/users/${params.user_id}/ride_requests`,{\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(res => res.json());\n  },\n  update(params) {\n    return fetch(`${BASE_URL}/ride_requests/${params.id}`, {\n      method: 'PATCH',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(res => res.json)\n  }\n}\n\nexport const Session = {\n  create(params) {\n   return fetch(`${BASE_URL}/sessions`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    }).then(\n      res => res.json()\n    );\n  },\n  destroy() {\n    return fetch(`${BASE_URL}/sign_out`, {\n      method: 'DELETE',\n      credentials: 'include'\n    }).then(res => res.json());\n  },\n  currentUser() {\n    return fetch(`${BASE_URL}/current_user`, {\n      credentials: 'include'\n    }).then(res => res.json());\n  }\n}\n\n\n\n\n\n\n\n\n","import React from 'react';\n\nconst SignInPage = ({ handleSubmit, history}) => {\n\n  function onSubmit(event) {\n    event.preventDefault();\n    const { currentTarget } = event;\n    const formData = new FormData(currentTarget);\n    handleSubmit({\n      email: formData.get('email'),\n      password: formData.get('password')\n    });\n    history.push('/');\n  }\n\n  return(\n    <main className='bgImg' id='sign-style'>\n      <h4 className='sign-heading'>Sign In</h4>\n      <form className='sign-form' onSubmit={onSubmit}>\n        <div className='form-group row'>\n          <label htmlFor='email' className='col-sm-2 col-form-label'>Email*</label>\n          <input id='email' type='email' name='email' required='required' />\n        </div>\n        <div className= 'form-group row'>\n          <label htmlFor='password' className='col-sm-2 col-form-label'>Password*</label>\n          <input id='password' type='password' name='password' required='required' />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Sign In</button>\n      </form>\n    </main>\n  )\n}\n\nexport default SignInPage;\n\n","import React from \"react\";\nimport { Customer } from \"../requests\";\n\n function SignUpPageForCustomer(props) {\n  function handleSubmit(event) {\n    event.preventDefault();\n    const { currentTarget } = event;\n    const fD = new FormData(currentTarget);\n\n    const newUser = {\n      first_name: fD.get(\"first_name\"),\n      last_name: fD.get(\"last_name\"),\n      email: fD.get(\"email\"),\n      password: fD.get(\"password\"),\n      password_confirmation: fD.get(\"password_confirmation\"),\n      address:fD.get(\"address\"), \n      destination_address:fD.get(\"destination_address\"), \n      phone_number:fD.get(\"phone_number\")\n    };\n\n    Customer.create(newUser).then(res => {\n      if(res.id) {\n        props.history.push(\"/sign_in\");\n      }\n    });\n  }\n  return (\n    <main className='bgImage' id='sign-style'>\n      <h5 className='sign-heading'>Sign Up As New Customer</h5>\n\n      <form className='sign-form' onSubmit={handleSubmit}>\n        <div className=\"form-group row\">\n          <label htmlFor=\"first_name\" className=\"col-sm-4 col-form-label\">First Name*</label>\n          <input type=\"text\" name=\"first_name\" required= \"required\" id=\"first_name\" />\n        </div>\n\n        <div className=\"form-group row\">\n          <label htmlFor=\"last_name\" className=\"col-sm-4 col-form-label\">Last Name*</label>\n          <input type=\"text\" name=\"last_name\" required= \"required\" id=\"last_name\" />\n        </div>\n        \n        <div className=\"form-group row\">\n          <label htmlFor=\"address\" className=\"col-sm-4 col-form-label\">Address*</label>\n          <input type=\"text\" name=\"address\" required= \"required\" id=\"address\" />\n        </div>\n        <p><small><b>Note : </b>The address should be in this format, e.g. 2916, McBride Ave/St, Surrey, BC </small></p>\n\n        <div className=\"form-group row\">\n          <label htmlFor=\"destination_address\" className=\"col-sm-4 col-form-label\">Destination Address*</label>\n          <input type=\"text\" name=\"destination_address\" required= \"required\" id=\"destination_address\" />\n        </div>\n        \n      \n        <div className=\"form-group row\">\n          <label htmlFor=\"phone_number\" className=\"col-sm-4 col-form-label\">Phone Number*</label>\n          <input type=\"number\" name=\"phone_number\" required= \"required\" id=\"phone_number\" />\n        </div>\n\n        <div className=\"form-group row\">\n          <label htmlFor=\"email\" className=\"col-sm-4 col-form-label\">Email*</label>\n          <input type=\"email\" name=\"email\" required= \"required\"  id=\"email\" />\n        </div>\n       \n        <div className=\"form-group row\">\n          <label htmlFor=\"password\" className=\"col-sm-4 col-form-label\">Password*</label>\n          <input type=\"password\" name=\"password\" required= \"required\" id=\"password\" />\n        </div>\n\n        <div className=\"form-group row\"> \n          <label htmlFor=\"password_confirmation\" className=\"col-sm-4 col-form-label\">Confirm Password*</label>\n          <input\n            type=\"password\"\n            name=\"password_confirmation\"\n            required= \"required\" \n            id=\"password_confirmation\"\n          />\n        </div>\n        \n        <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\n      </form>\n    </main>\n  );\n}\nexport default SignUpPageForCustomer;","import React from \"react\";\nimport { User } from \"../requests\";\n\n function SignUpPageForDriver(props) {\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const { currentTarget } = event;\n    const fD = new FormData(currentTarget);\n\n    const newUser = {\n      first_name: fD.get(\"first_name\"),\n      last_name: fD.get(\"last_name\"),\n      email: fD.get(\"email\"),\n      password: fD.get(\"password\"),\n      password_confirmation: fD.get(\"password_confirmation\"),\n      address:fD.get(\"address\"),\n      driver_license_number:fD.get(\"driver_license_number\"),\n      description:fD.get(\"description\"),\n      phone_number:fD.get(\"phone_number\"),\n    };\n\n    User.create(newUser).then(res => {\n      if (res.id) {\n        props.history.push(\"/sign_in\");\n      }\n    });\n  }\n  return (\n    <main className='bgImage' id='sign-style'>\n      <h5 className='sign-heading'>Sign Up As New Driver</h5>\n\n      <form className='sign-form' onSubmit={handleSubmit}>\n        <div className=\"form-group row\">\n          <label htmlFor=\"first_name\" className=\"col-sm-4 col-form-label\">First Name*</label>\n          <input type=\"text\" name=\"first_name\" required= \"required\" id=\"first_name\" />\n        </div>\n\n        <div className=\"form-group row\">\n          <label htmlFor=\"last_name\" className=\"col-sm-4 col-form-label\">Last Name*</label>\n          <input type=\"text\" name=\"last_name\" required= \"required\" id=\"last_name\" />\n        </div>\n\n        <div className=\"form-group row\">\n          <label htmlFor=\"address\" className=\"col-sm-4 col-form-label\">Address*</label>\n          <input type=\"text\" name=\"address\" required= \"required\" id=\"address\" />\n        </div>\n        <p><small><b>Note : </b>The address should be in this format, e.g. 2916, McBride Ave/St, Surrey, BC </small></p>\n\n        <div className=\"form-group row\">\n          <label htmlFor=\"phone_number\" className=\"col-sm-4 col-form-label\">Phone Number*</label>\n          <input type=\"number\" name=\"phone_number\" required= \"required\" id=\"phone_number\" />\n        </div>\n\n        <div className=\"form-group row\">\n          <label htmlFor=\"driver_license_number\" className=\"col-sm-4 col-form-label\">Driving License Number*</label>\n          <input type=\"number\" name=\"driver_license_number\" required= \"required\" id=\"driver_license_number\" />\n        </div>\n\n        <div className=\"form-group row\">\n          <label htmlFor=\"description\" className=\"col-sm-4 col-form-label\">Description*</label>\n          <input type=\"string\" name=\"description\" required= \"required\"  id=\"description\" />\n        </div>\n\n        <div className=\"form-group row\">\n          <label htmlFor=\"email\" className=\"col-sm-4 col-form-label\">Email*</label>\n          <input type=\"email\" name=\"email\" required= \"required\" id=\"email\" />\n        </div>\n\n        <div className=\"form-group row\">\n          <label htmlFor=\"password\" className=\"col-sm-4 col-form-label\">Password*</label>\n          <input type=\"password\" name=\"password\" required= \"required\" id=\"password\" />\n        </div>\n\n        <div className=\"form-group row\"> \n          <label htmlFor=\"password_confirmation\" className=\"col-sm-4 col-form-label\">Confirm Password*</label>\n          <input\n            type=\"password\"\n            name=\"password_confirmation\"\n            required= \"required\" \n            id=\"password_confirmation\"\n          />\n        </div>\n        \n        <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\n      </form>\n    </main>\n  );\n}\nexport default SignUpPageForDriver;","import {getDistance} from 'geolib';\nimport _ from 'lodash';\nimport {Customer, Session} from '../requests';\nimport React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default class Locations extends Component{\n  constructor(props){\n    super(props);\n    this.state = {  \n      destinationLat: props.latitude,\n      destinationLong: props.longitude,\n      distance: []\n    }\n  }\n  componentDidMount(){\n    Customer.index()\n      .then(\n        customers => {\n          Session.currentUser()\n            .then(current => {\n                const currentCustomer = customers.filter(customer => customer.id === current.id)[0];\n            \n                let dis = getDistance(\n                  {latitude: currentCustomer.latitude, longitude: currentCustomer.longitude},\n                  {latitude: this.state.destinationLat, longitude: this.state.destinationLong}\n                );\n                this.setState({\n                  distance:  [_.round((dis/1000),1)]\n                })\n                \n              })\n        }\n      )\n  }            \n        \n  render(){\n    const {distance} = this.state;\n    const {id, first_name, last_name} = this.props;\n    return(  \n      <div>\n        {distance > 0 && distance < 10 &&\n          <li key={id}>\n            <u>\n              <Link \n                key={id}\n                to={`/users/${id}`}\n                className='driverName'> \n                {first_name} {last_name}\n              </Link>\n            </u>\n            <p>\n              <button>{distance} km away</button>\n            </p>\n            <br/>\n          </li> \n        }     \n      </div>      \n    );\n  }\n}\n","import React,{Component} from 'react';\nimport {User} from '../requests';\nimport GoogleAPI from './GoogleAPI';\n\nclass DriverIndexPage extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      users: []\n    }    \n  }\n  componentDidMount() {\n    User.index()\n      .then((users) => {\n        this.setState((state) => {\n          return {\n           users: users\n          }   \n        })  \n      })    \n  }\n\n  render() {\n    const {users} = this.state; \n    return ( \n      <main className=\"bgImage\">\n        <h3 className='headerStyle'>Drivers Within 10 km :</h3>    \n        <ol className='list'>\n          {\n            users.map(user => {  \n              return(   \n                <GoogleAPI {...user} />              \n              )\n            })\n          }\n        </ol>\n      </main>\n     );\n  }\n}\nexport default DriverIndexPage;\n","import React from 'react';\n\nfunction WelcomePage() {\n  return (\n    <div style={{\n        fontSize: '50px'\n    }} className=\"container\">   \n    </div>\n  );\n}\n\nexport default WelcomePage;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst AuthRoute = (props) => {\n  const { isAuth, component: Component, ...restProps } = props;\n  return (\n    <Route\n      {...restProps}\n      render={\n        (routeProps) => {\n          if (isAuth) {\n            return <Component {...routeProps} />;//\n          } else {\n            return <Redirect to='/sign_in' />\n          }\n        }\n      }\n    />\n  )\n}\n\nexport default AuthRoute;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { FaCar} from 'react-icons/fa';\n\nconst Navbar =(props) =>{\n  function handleSignOutButtonClick() {\n    props.destroySession();\n    window.location = '/';\n  }\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\" >\n      <span>       \n        <FaCar className= 'carIcon'/>\n        <span className= 'appName'>Ride share</span> \n      </span>\n      <span className='navStyle'>\n        <NavLink to ='/'><button className=\"btn btn-primary btn-sm\" type=\"button\">Home</button></NavLink>\n        {\n        props.currentUser ?\n          (  <>\n              {\n                props.currentUser.driver_license_number ?\n                ( \n                  <>\n                    <NavLink to ='/driver'><button className =\"btn btn-primary btn-sm\" type=\"button\" id='buttonSpace'>Driver</button></NavLink>\n                    <NavLink to ='/ride_requests'><button className =\"btn btn-primary btn-sm\" type=\"button\" id='buttonSpace'>Ride Requests List</button></NavLink>\n                  </>\n                ):  \n                ( <>\n                    <NavLink to ='/users'><button className =\"btn btn-primary btn-sm\" type=\"button\" id='buttonSpace'>Drivers List</button></NavLink>\n                    <NavLink to ='/customer'><button className =\"btn btn-primary btn-sm\" type=\"button\" id='buttonSpace'>Customer</button></NavLink>\n                  </>\n                )\n              }\n              <span className='username'>Hello! {props.currentUser.first_name} {props.currentUser.last_name}</span>\n              <button onClick={handleSignOutButtonClick} className=\"btn btn-danger btn-sm\" id='buttonSpace'>Sign Out\n              </button>  \n            </>\n          ):\n          (\n            <>\n              <NavLink to='/sign_in'><button className=\"btn btn-primary btn-sm\" type=\"button\" id='buttonSpace'>SignIn</button></NavLink>\n              <NavLink to='/sign_up/driver'> <button className=\"btn btn-primary btn-sm\" type=\"button\" id='buttonSpace'>SignUp As Driver</button></NavLink>\n              <NavLink to='/sign_up/customer'><button className=\"btn btn-primary btn-sm\" type=\"button\" id='buttonSpace'>SignUp As Customer</button></NavLink>\n            </>\n          )\n        }\n      </span>\n    </nav>\n  );\n}\nexport default Navbar;","import React , {Component} from 'react';\nimport {Session, RideRequest, User} from '../requests';\nimport Table from 'react-bootstrap/Table'\nimport { BiCurrentLocation, BiEnvelope, BiPhoneCall, BiMap} from \"react-icons/bi\";\n\nclass CustomerProfilePage extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      customer: {},\n      ride_requests: [],\n      users: []\n    }\n  }\n  componentDidMount() {\n    Session.currentUser()\n      .then((customer) => {\n        this.setState((state) => {\n           return {\n             customer: customer\n           }})\n        RideRequest.index()\n          .then(ride_requests => {       \n            this.setState((state) => {\n              return{\n                ride_requests: ride_requests.filter(a => a.customer_id ===  customer.id)        \n              }   \n            })\n            this.state.ride_requests.map(ride_request => {\n              User.show(ride_request.user_id)\n                .then(user => {\n                  this.setState(previousState => {\n                    return {\n                      users : [...previousState.users, user]\n                    }\n                  })\n                })\n            })\n          })   \n      })\n  }\n  render(){\n    const {customer, ride_requests, users} = this.state;\n\n    return(   \n      <main className='bgImage'>     \n        <h3 className='headerStyle'>Your Profile Page</h3>   \n        <div className='pfList'>\n          <p key={customer.id}> </p>\n          <h5 className= 'pfName'> {customer.first_name} {customer.last_name}</h5>\n          <p><BiCurrentLocation /> {customer.address}</p>\n          <p><BiMap /> {customer.destination_address}</p>\n          <p><BiEnvelope /> {customer.email}</p> \n          <p><BiPhoneCall/>  {customer.phone_number}</p>  \n        </div>\n\n        <div className='tableStyle'>\n          <h5 className='title'><u>Ride Request List</u></h5>\n          <Table striped bordered hover variant=\"dark\">\n            <thead className='tableList'>\n              <tr>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Address</th>\n                <th>Ride Date</th>\n                <th>Ride Time</th>\n                <th>Status</th>     \n              </tr>\n            </thead>\n            <tbody className='tableList'> \n              {ride_requests.map((ride_request) => {\n                let requiredUser;\n                {users.map(element => {\n                  if(element.id === ride_request.user_id) {\n                    requiredUser = element;\n                  }\n                })}\n                if(requiredUser) {\n                  return (\n                    <tr key={ride_request.id}>\n                      <td>{requiredUser.first_name}</td>\n                      <td>{requiredUser.last_name}</td>\n                      <td>{requiredUser.address} </td>\n                      <td>{ride_request.ride_date}</td>\n                      <td>{ride_request.ride_time.substring(11,16)}</td>\n                      <td>{ride_request.status}</td>         \n                    </tr>\n                  )\n                }\n              })}\n            </tbody>\n          </Table>  \n        </div>\n      </main>\n    )\n  }\n}\n\nexport default CustomerProfilePage;","import React from 'react';\nimport {RideRequest} from '../requests';\nimport {toast} from 'react-toastify';\n\nconst RideRequestPage = (props) => {\n  function handleSubmit(event) {\n    event.preventDefault();\n    const {currentTarget} = event;\n    const fD = new FormData(currentTarget);\n\n    const newRideRequest = {\n      ride_date: fD.get(\"ride_date\"),\n      ride_time: fD.get(\"ride_time\"),\n      status: \"\",\n      user_id: props.match.params.id  \n    };\n\n    RideRequest.create(newRideRequest)\n      .then(res => {\n       \n        toast.success(`Ride request 🚗 🚗 created ! `);\n        setTimeout(function(){ \n          window.location.reload(true);}, 3000);\n      })\n     \n  }\n  return (\n    <main className='bgImage' style={{color:'white'}}>\n      <h3 className='headerStyle'>Create A Ride Request</h3>\n\n      <form className= 'rideRequestForm' onSubmit={handleSubmit}>   \n        <div className=\"form-group row\">\n          <label htmlFor=\"ride_date\" className=\"col-sm-3 col-form-label\">Select Day*</label>\n          <input type=\"date\" name=\"ride_date\" required= \"required\" />\n        </div>\n\n        <div className=\"form-group row\">\n          <label htmlFor=\"ride_time\" className=\"col-sm-3 col-form-label\">Select Time*</label>\n          <input type=\"time\" name=\"ride_time\" required= \"required\" />\n        </div>\n       \n        <button type=\"submit\" className=\"btn btn-primary\" >Submit Ride Request</button>\n        \n      </form>\n    </main>\n    ); \n}\n \nexport default RideRequestPage;","import React from 'react';\n\nfunction StarRating(props) {\n    const { max, current } = props;\n    return (\n        <div className=\"StarRating\">\n            {Array.from({ length: max }).map((el, i) => {\n                return (\n                    <Star\n                        key={i}\n                        style={{\n                            height: '.7em',\n                            color: i < current ? 'gold' : 'whitesmoke',\n                        }}\n                    />\n                );\n            })}   \n        </div>\n    );\n}\n\nexport default StarRating;\n\nfunction Star (props) {\n    const { style = {}, ...restProps } = props;\n    const { color ='black', ...restStyle } = style;\n  \n    return (\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        {...restProps}\n        style={restStyle}\n        viewBox='0 0 576 512'\n      >\n        <path\n          fill={color}\n          d='M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z'\n        />\n      </svg>\n    );\n}","import React from 'react';\nimport {BsPersonSquare} from \"react-icons/bs\";\nimport StarRating from './StarRating';\n\nconst ReviewDetails = ({body, created_at, customer, rating})=>{\n  \n  return(\n    <div className='padding-10'>\n      <BsPersonSquare className='reviewIcon'/>\n      <span className='reviewPerson'>\n        <u>{customer}</u> \n      </span>\n      <small className='reviewDate'>{created_at.toLocaleString()}</small>\n      <p className='ratingStyle'><StarRating max={5} current={rating} /></p>\n      <p className='reviewBody'>{body}</p>\n   \n    </div>\n  )\n}\nexport default ReviewDetails;","import React from 'react';\nimport ReviewDetails from './ReviewDetails';\n\nconst ReviewList = ({reviews, customers}) => {\n  return(\n    <ul style= {{listStyle:'none'}}>\n      {\n        reviews?\n          reviews.map((review) => {\n            let requiredCustomer;\n            customers.map(element => {\n              if(element.id === review.customer_id){\n                  requiredCustomer = element;\n              }\n            });\n            if(requiredCustomer){\n              return (      \n                <li key={review.id}>\n                  <ReviewDetails\n                    id={review.id}\n                    customer = {requiredCustomer.first_name}\n                    body={review.body}\n                    rating={review.rating}\n                    created_at={new Date(review.created_at).toDateString() }\n                  />\n                </li>\n              )\n            }\n          })\n        :\n        null\n      }\n    </ul>\n  )\n}\n\nexport default ReviewList;\n","import React , {Component} from 'react';\nimport {Session, Customer, Review} from '../requests';\nimport ReviewList from './ReviewList';\nimport { BiCurrentLocation, BiEnvelope, BiPhoneCall} from \"react-icons/bi\";\nimport {IoCardSharp } from \"react-icons/io5\";\n\nclass DriverProfilePage extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      user: {},\n      customers: [],\n      reviews: []\n    }\n  }\n\n  componentDidMount() {\n    Session.currentUser()\n      .then((user) => {\n        this.setState((state) => {\n            return {\n              user: user\n            }})\n          Review.show(user)\n            .then(reviews => {\n              this.setState((state) => {\n                return {\n                  reviews: reviews\n                }\n              })\n              reviews.map(reviews => {\n                Customer.show(reviews.customer_id)\n                  .then(customer => {\n                    this.setState(previousState => {\n                      return {\n                        customers: [...previousState.customers, customer]\n                      }    \n                    });        \n                  })  \n              })  \n            })\n      })   \n  }\n  \n  render(){\n    const {user, reviews, customers} = this.state;\n    return(\n      <main className='bgImage'>\n        <h3 className='headerStyle'>Your Profile Page</h3>   \n        <div className='pfList'>\n            <h5 className='pfName'> {user.first_name} {user.last_name}</h5>\n            <p> {user.description} </p>\n            <p><BiCurrentLocation /> {user.address} </p>\n            <p><BiEnvelope /> {user.email}</p> \n            <p><BiPhoneCall/> {user.phone_number} </p>       \n            <p>< IoCardSharp/> {user.driver_license_number} </p>\n        </div>\n\n        <div className='reviewList'>\n          <h5 className='title'><u>Reviews</u></h5>\n            <ReviewList reviews={reviews} customers={customers}/>\n        </div>   \n      </main>\n    )\n  }\n}\n \nexport default DriverProfilePage;","import React from 'react';\nimport { BiCurrentLocation, BiEnvelope, BiPhoneCall} from \"react-icons/bi\";\n\nconst DriverDetails = ({ first_name, last_name, description, email, \n address, phone_number}) => {\n   return (\n    <div>\n      <h5 className='pfName'>{first_name} {last_name}</h5>\n      <p> {description} </p>\n      <p><BiCurrentLocation /> {address} </p>\n      <p><BiEnvelope /> {email}</p> \n      <p><BiPhoneCall/> {phone_number} </p>  \n    </div>\n   )\n }\n export default DriverDetails;","import React, { Component } from 'react';\nimport {User, Review, Customer} from '../requests';\nimport DriverDetails from './DriversDetails';\nimport ReviewList from './ReviewList';\nimport {Link} from 'react-router-dom';\nimport {toast} from 'react-toastify';\n\nclass DriverShowPage extends Component {\n  constructor(props){\n    super(props);\n    this.state = { \n      user: {},\n      reviews: [],\n      customers: []\n     }\n     this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount(){\n    User.show(this.props.match.params.id)\n      .then(user => {\n        this.setState((state)=>{\n          return {\n            user: user\n          }})\n        Review.show(user)\n          .then(reviews => {\n            this.setState((state)=>{\n              return {\n                reviews: reviews\n              }\n            })\n            reviews.map(review => {\n              Customer.show(review.customer_id)\n                .then(customer => {\n                  this.setState(previousState => {\n                    return {\n                      customers: [...previousState.customers, customer]\n                    }    \n                  });        \n                })  \n            })  \n          }) \n      })         \n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    const params = {\n      body: formData.get('body'),\n      rating: formData.get('rating'),\n      user_id: this.state.user.id\n    };\n      Review.create(params)\n       .then((review)=> {\n          toast.success('Thank you for your review 😊 ');\n          setTimeout(function() {window.location.reload(true);}, 3000)\n      })\n  }\n  render() { \n    const {user, reviews, customers} = this.state;\n    return ( \n      <main className='bgImage'>\n          <h3 className ='headerStyle'>Driver Details</h3>\n          <div className='pfList'>\n            <DriverDetails\n              first_name= {user.first_name}\n              last_name= {user.last_name}\n              address= {user.address}\n              email= {user.email}\n              phone_number= {user.phone_number}\n              description= {user.description}\n            /> \n            <div className='padding-10'>\n              <h5 className='title'><u>Make a ride request</u></h5>\n              <Link to={`/users/${user.id}/ride_requests`}><button className=\"btn btn-primary btn\" type=\"button\"> Ride Request</button></Link>\n            </div>\n\n            <div className='padding-10'>              \n              <h5 className='title'><u>Write a review</u></h5>\n              <form className='reviewForm' onSubmit={this.handleSubmit} >  \n                <div id='rating'> \n                  <input type='radio' name='rating' value='5' id='5' />\n                    <label htmlFor='5'>☆</label> \n                  <input type='radio' name='rating' value='4' id='4' />\n                    <label htmlFor='4'>☆</label> \n                  <input type='radio' name='rating' value='3' id='3' />\n                    <label htmlFor='3'>☆</label> \n                  <input type='radio' name='rating' value='2' id='2' />\n                    <label htmlFor='2'>☆</label> \n                  <input type='radio' name='rating' value='1' id='1' />\n                    <label htmlFor='1'>☆</label>\n                </div>  \n                \n                <textarea name='body' id='body' cols = '30' rows = '1'></textarea>\n                \n                <button className=\"btn btn-primary btn-sm\" id='button-s' type=\"submit\">Submit</button>                               \n              </form> \n            </div>\n            <div className='padding-10'>   \n              <h6 className='title'><u>Reviews</u></h6>\n                <ReviewList reviews={reviews} customers={customers}/>\n            </div>\n        </div>\n      </main> \n    );\n  }\n}\n \nexport default DriverShowPage;","import React , {Component} from 'react';\nimport {Session, RideRequest, Customer} from '../requests';\nimport Table from 'react-bootstrap/Table'\n\nclass DriverRideRequestPage extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      user: {},\n      ride_requests: [],\n      customers: []\n    }\n    this.acceptRequest = this.acceptRequest.bind(this);\n  }\n\n  componentDidMount() {\n    Session.currentUser()\n      .then((user) => {\n        this.setState((state) => {\n            return {\n              user: user\n            }})\n          RideRequest.show(user)\n            .then(ride_requests => {\n              this.setState((state) => {\n                return {\n                  ride_requests: ride_requests\n                }\n              })\n              ride_requests.map(ride_request => {   \n                Customer.show(ride_request.customer_id)\n                .then(customer => {\n                  this.setState(previousState => {\n                    return {\n                      customers: [...previousState.customers, customer]\n                    }    \n                });        \n                })  \n              })    \n            })          \n      })   \n  }\n  \n  acceptRequest(id, status){\n    const actionParms = {\n      id : id,\n      status: status\n    }\n    RideRequest.update(actionParms)\n      .then( () => {\n        window.location.reload(true);\n      })\n  }\n \n  render(){\n    const {ride_requests, customers} = this.state;\n    return(\n      <main className='bgImage'>\n        <h3 className='headerStyle'>Ride Requests Information</h3>        \n       \n        <div className='tableStyle'>\n          <h5 className='title'><u>Ride Requests Pending List</u></h5>\n          <Table striped bordered hover variant=\"dark\">\n            <thead className='tableList'>\n              <tr>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Address</th>\n                <th>Destination Address</th>\n                <th>Ride Date</th>\n                <th>Ride Time</th>\n                <th>Accept</th>\n                <th>Decline</th>\n              </tr>\n            </thead>\n\n            <tbody className='tableList'> \n              {ride_requests\n                .filter(a => a.status === '')\n                  .map(ride_request => {  \n                    let requiredCustomer;\n                    {customers.map(customer => {\n                      if(customer.id === ride_request.customer_id) {\n                        requiredCustomer = customer;\n                      }\n                    })}\n                    if(requiredCustomer){ \n                      return(\n                        <tr key={ride_request.id}>\n                          <td>{requiredCustomer.first_name}</td>\n                          <td>{requiredCustomer.last_name}</td>\n                          <td>{requiredCustomer.address}</td>\n                          <td>{requiredCustomer.destination_address}</td>\n                          <td>{ride_request.ride_date}</td>\n                          <td>{ride_request.ride_time.substring(11,16)}</td>\n                          <td><button onClick={() => this.acceptRequest(ride_request.id, 'accepted')} className= 'btn btn-success btn-sm'>Accept</button></td>\n                          <td><button onClick={() => this.acceptRequest(ride_request.id , 'declined')} className= 'btn btn-danger btn-sm'>Decline</button></td>           \n                        </tr>\n                      )\n                    }\n              })}       \n            </tbody>\n          </Table>                     \n          <br/>\n          <h5 className='title'><u>Ride Requests Accepted List</u></h5>\n          <Table striped bordered hover variant=\"dark\">\n            <thead className='tableList'>\n              <tr>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Address</th>\n                <th>Destination Address</th>\n                <th>Ride Date</th>\n                <th>Ride Time</th>\n              </tr>\n            </thead>\n            <tbody className='tableList'> \n              {ride_requests\n                .filter(a => a.status === 'accepted')\n                  .map(ride_request => {  \n                  let requiredCustomer;\n                  {customers.map(customer => {\n                    if(customer.id === ride_request.customer_id) {\n                      requiredCustomer = customer;\n                    }\n                  })}\n                  if(requiredCustomer){ \n                    return(\n                      <tr key={ride_request.id}>\n                        <td>{requiredCustomer.first_name}</td>\n                        <td>{requiredCustomer.last_name}</td>\n                        <td>{requiredCustomer.address}</td>\n                        <td>{requiredCustomer.destination_address}</td>\n                        <td>{ride_request.ride_date}</td>\n                        <td>{ride_request.ride_time.substring(11,16)}</td>        \n                      </tr>\n                    )\n                  }\n              })}       \n            </tbody>\n          </Table>                     \n        </div>\n      </main>\n    )\n  }\n}\n \nexport default DriverRideRequestPage;","import React from 'react';\n\nfunction NotFoundPage() {\n  return (\n    <div className=\"errorImage\">   \n    </div>\n  );\n}\n\nexport default NotFoundPage;","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport { Session } from './requests';\nimport SignInPage from './components/SignInPage';\nimport SignUpPageForCustomer from './components/SignUpPageForCustomer';\nimport SignUpPageForDriver from './components/SignUpPageForDriver';\nimport DriverIndexPage from './components/DriverIndexPage';\nimport WelcomePage from './components/WelcomePage';\nimport AuthRoute from './components/AuthRoute';\nimport Navbar from './components/Navbar';\nimport CustomerProfilePage from './components/CustomerProfilePage';\nimport RideRequestPage from './components/RideRequestPage';\nimport DriverProfilePage from './components/DriverProfilePage';\nimport DriverShowPage from './components/DriverShowPage';\nimport DriverRideRequestPage from './components/DriverRideRequestPage';\nimport NotFoundPage from './components/NotFoundPage';\nimport './App.css';\nimport {ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      user: null\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.destroySession = this.destroySession.bind(this);\n  }\n\n  componentDidMount(){\n    Session.currentUser()\n    .then(user => {\n      this.setState(state => {\n        return {\n          user: user\n        }\n      })\n    })\n  }\n\n  handleSubmit(params) { \n    Session.create(params)\n      .then(() => {\n        return Session.currentUser()\n      })\n      .then(user => {\n        this.setState(state => {\n          return {\n            user: user\n          }\n        })\n      })\n  }\n  destroySession() {\n    Session.destroy()\n      .then(res => {\n        this.setState((state) => {\n          return {\n            user: null\n          }\n        })\n      })\n  }\n\n  render(){\n    const {user} = this.state;\n\n    return (\n      <div className=\"App\">      \n        <BrowserRouter>\n        <ToastContainer/>\n        <Navbar currentUser={user} destroySession={this.destroySession}/>\n          <Switch>\n          \n            <Route exact path = '/' component = {WelcomePage}/>\n            <AuthRoute exact\n              path='/users'\n              isAuth={user}\n              component={DriverIndexPage}\n            /> \n            <Route exact path = '/users/:id' component = {DriverShowPage}/>\n            <Route exact path = '/users/:id/ride_requests' component= {RideRequestPage} />\n            <Route exact path = '/customer' component= {CustomerProfilePage} />\n            <Route exact path = '/driver' component= {DriverProfilePage} />\n            <Route exact path = '/ride_requests' component= {DriverRideRequestPage} />\n            <Route exact path = '/sign_in' render = {routeProps => <SignInPage handleSubmit= {this.handleSubmit} {...routeProps}/>}/>\n            <Route exact path = '/sign_up/driver' component = {SignUpPageForDriver}/>\n            <Route exact path = '/sign_up/customer' component = {SignUpPageForCustomer}/>\n            <Route component={NotFoundPage} />\n\n          </Switch>\n        </BrowserRouter>     \n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(\n \n    <App />\n    \n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}